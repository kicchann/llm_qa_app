rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{uid} {
      allow create, read, update: if isTheSameUserOrAdmin(uid);
      allow delete: if false;

      match /refferedDocuments/{refferedDocumentId} {
        allow create, read, update: if isTheSameUserOrAdmin(uid);
      }

      match /indexManagers/{indexManagerId} {
        allow create, read: if isTheSameUserOrAdmin(uid);
      }

      match /contents/{contentId} {
        allow create, read, update: if isTheSameUserOrAdmin(uid);

        // answersはcloud functionsで作成するので、ここではcreateは許可しない
        match /answers/{answerId} {
          allow read: if isAuthenticated();
          allow create, update, delete: if false;
        }

        // queriesはクライアントが作成する
        match /queries/{queryId} {
          allow create, read, update: if isAuthenticated();
          allow delete: if false;
        }
      }
    }

    match /settings/{uid} {
      allow read: if isAuthenticated();
      allow create, update: if isTheSameUserOrAdmin(uid);
    }

    // stripe checkout用
    // ここではcreateは許可しない
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
      match /payments/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    // stripe checkout用
    // ここではcreateは許可しない
    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
  }

  function isAuthenticated() {
  	return request.auth != null;
  }

  function isTheSameUserOrAdmin(uid) {
    return request.auth.uid == uid  || isAdmin();
  }

  function isAdmin() {
    return request.auth.uid == "AdminUid";
  }
}
